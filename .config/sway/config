### Variables
set $mod Mod4
set $left h
set $down j
set $up k
set $right l
set $term kitty
set $font 'RobotoMono Nerd Font:size=11'
set $menu '~/.config/sway/launcher.wl.rofi.fish'
set $powermenu '~/.config/sway/powermenu.wl.rofi.fish'
set $gnome-schema org.gnome.desktop.interface

### Theming
exec_always {
    gsettings set $gnome-schema gtk-theme    'Pop-dark'
    gsettings set $gnome-schema icon-theme   'Papirus-Dark'
    gsettings set $gnome-schema cursor-theme 'Bibata-Modern-Ice'
    gsettings set $gnome-schema font-name    'Roboto Mono'
}
# set primary gruvbox colorscheme colors
set $bg01    #282828
set $bg02    #1d2021
set $fg01    #ebdbb2
set $fg02    #a89984
set $red     #cc241d
set $blue    #458588
set $purple  #d3869b
set $white   #ffffff
set $black   #000000
set $xyellow #FFAF3E


### Keyboard configuration
input "2385:5842:Kingston_HyperX_Alloy_FPS_Pro_Mechanical_Gaming_Keyboard" {
    xkb_layout us
    xkb_options caps:escape
   repeat_delay 300
   repeat_rate 50
}
#input * 
#input * 

### Mouse Configuration
input "5426:92:Razer_Razer_DeathAdder_Elite" {
    accel_profile flat
    pointer_accel 0.1
}

### Font
font pango:RobotoMono Nerd Font 11px

### Output configuration
output * bg ~/.wallpapers/makima-smile.jpg fill
# Monitor layout
# You can get the names of your outputs by running: swaymsg -t get_outputs
output DP-1 resolution 1920x1080 position 0,0
output HDMI-A-1 resolution 1920x1080 position 1920,0

#class                   $border  $bg    $text  $indicator  $child_border
client.focused           $bg02    $bg02  $fg01  $xyellow    $fg02
client.focused_inactive  $bg01    $bg01  $fg01  $bg01       $bg02
client.unfocused         $bg01    $bg01  $fg02  $white      $bg01
client.urgent            $bg02    $bg02  $fg01  $xyellow    $red

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 900 'swaylock' \
         timeout 1200 'swaymsg "output * dpms off"' \
         resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+Q kill

# Start your launcher
bindsym $mod+d exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# Power Menu
bindsym $mod+x exec $powermenu

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# Workspaces:
set $monitor-one 'DP-1'
set $monitor-two 'HDMI-A-2'
# Multihead
workspace 1 output $monitor-one
workspace 2 output $monitor-one
workspace 3 output $monitor-one
workspace 4 output $monitor-one
workspace 5 output $monitor-one
workspace 6 output $monitor-two
workspace 7 output $monitor-two
workspace 8 output $monitor-two
workspace 9 output $monitor-two
workspace 10 output $monitor-two
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# Next/Previous
bindsym $mod+Alt+$right workspace next_on_output
bindsym $mod+Alt+$left workspace prev_on_output
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

### Status Bar: waybar
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}

gaps inner 10
gaps outer 0
smart_borders no_gaps
default_border pixel 1

include /etc/sway/config.d/*

### Autostart
exec mako
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec mkfifo $SWAYSOCK.wob && tail -f $SWAYSOCK.wob | wob --border-color '#FFFFAF3E' --background-color '#80121212' --bar-color '#FFFFAF3E'
exec_always python3 ~/.config/sway/swayfader.py
exec autotiling

### Audio | audio | sound:
bindsym XF86AudioRaiseVolume exec pamixer -ui 5 && pamixer --get-volume > $SWAYSOCK.wob
bindsym XF86AudioLowerVolume exec pamixer -ud 5 && pamixer --get-volume > $SWAYSOCK.wob
bindsym XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $SWAYSOCK.wob ) || pamixer --get-volume > $SWAYSOCK.wob
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set +5%
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86Search exec bemenu-run

### Screen Capture | Screenshot | screenshot | swappy
bindsym print exec "~/.config/sway/screenshot.wl.fish monitor fast"
bindsym Ctrl+print exec "~/.config/sway/screenshot.wl.fish window fast"
bindsym Ctrl+$mod+print exec "~/.config/sway/screenshot.wl.fish all fast"
bindsym $mod+print exec "~/.config/sway/screenshot.wl.fish region fast"
# edit
bindsym Shift+print exec "~/.config/sway/screenshot.wl.fish monitor"
bindsym Ctrl+Shift+print exec "~/.config/sway/screenshot.wl.fish window"
bindsym Ctrl+$mod+Shift+print exec "~/.config/sway/screenshot.wl.fish all"
bindsym $mod+Shift+print exec "~/.config/sway/screenshot.wl.fish region"
# Color Picker
bindsym $mod+Shift+p exec "~/.config/sway/screenshot.wl.fish picker"
